"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

type CreateFruitMutation {
  fruit: FruitType
}

type CreateUserMutation {
  success: Boolean
  message: String
  user: UserType
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

type DeleteFruitMutation {
  fruit: FruitType
}

type FruitType {
  id: ID!
  name: String
  color: String
  created: DateTime
}

"""
The `GenericScalar` scalar type represents a generic
GraphQL scalar value that could be:
String, Boolean, Int, Float, List or Object.
"""
scalar GenericScalar

type Mutation {
  createUser(email: String!, password1: String!, password2: String!, username: String!): CreateUserMutation

  """Obtain JSON Web Token mutation"""
  tokenAuth(username: String!, password: String!): ObtainJSONWebToken
  verifyToken(token: String): Verify
  refreshToken(refreshToken: String): Refresh
  revokeToken(refreshToken: String): Revoke
  createFruit(color: String!, name: String!): CreateFruitMutation
  updateFruit(color: String, id: ID!, name: String): UpdateFruitMutation
  deleteFruit(id: ID!): DeleteFruitMutation
}

"""Obtain JSON Web Token mutation"""
type ObtainJSONWebToken {
  payload: GenericScalar!
  refreshExpiresIn: Int!
  token: String!
  refreshToken: String!
}

type Query {
  currentUser: UserType
  allUsers: [UserType]
  fruit(id: Int): FruitType
  allFruits: [FruitType]
}

type Refresh {
  payload: GenericScalar!
  refreshExpiresIn: Int!
  token: String!
  refreshToken: String!
}

type Revoke {
  revoked: Int!
}

type UpdateFruitMutation {
  fruit: FruitType
}

type UserType {
  id: ID!
  password: String!
  lastLogin: DateTime

  """
  Designates that this user has all permissions without explicitly assigning them.
  """
  isSuperuser: Boolean!

  """Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."""
  username: String!
  firstName: String!
  lastName: String!
  email: String!

  """Designates whether the user can log into this admin site."""
  isStaff: Boolean!

  """
  Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
  """
  isActive: Boolean!
  dateJoined: DateTime!
}

type Verify {
  payload: GenericScalar!
}

